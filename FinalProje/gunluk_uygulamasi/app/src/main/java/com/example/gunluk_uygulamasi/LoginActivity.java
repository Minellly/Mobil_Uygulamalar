package com.example.gunluk_uygulamasi;

import android.content.Intent;
import android.os.Bundle;
import android.os.Vibrator;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

/**
 * LoginActivity, kullanƒ±cƒ±dan 4 haneli PIN kodu alarak giri≈ü kontrol√º yapan ekrandƒ±r.
 * Doƒüru PIN girildiƒüinde MainActivity'e ge√ßi≈ü yapƒ±lƒ±r.
 */
public class LoginActivity extends AppCompatActivity {

    private TextView pinDots;                     // PIN giri≈ü g√∂sterimi i√ßin daireler
    private StringBuilder enteredPin = new StringBuilder();  // Girilen PIN
    private final String correctPin = "1234";     // üîê Doƒüru PIN sabit olarak tanƒ±mlƒ±

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);

        pinDots = findViewById(R.id.pinDots);
        updatePinDots(); // Ba≈ülangƒ±√ßta ‚óã ‚óã ‚óã ‚óã g√∂sterilir

        // Sayƒ±sal butonlarƒ± tanƒ±mla ve dinle
        int[] numberBtnIds = {
                R.id.btn0, R.id.btn1, R.id.btn2, R.id.btn3, R.id.btn4,
                R.id.btn5, R.id.btn6, R.id.btn7, R.id.btn8, R.id.btn9
        };

        for (int id : numberBtnIds) {
            Button btn = findViewById(id);
            if (btn != null) {
                btn.setOnClickListener(v -> {
                    // PIN 4 haneli olacak
                    if (enteredPin.length() < 4) {
                        enteredPin.append(btn.getText().toString());
                        updatePinDots();
                        if (enteredPin.length() == 4) {
                            checkPin(); // 4 karakter tamamlanƒ±nca kontrol et
                        }
                    }
                });
            }
        }

        // Silme butonu
        Button btnDel = findViewById(R.id.btnDel);
        if (btnDel != null) {
            btnDel.setOnClickListener(v -> {
                if (enteredPin.length() > 0) {
                    enteredPin.deleteCharAt(enteredPin.length() - 1);
                    updatePinDots();
                }
            });
        }
    }

    /**
     * PIN giri≈üini dairelerle g√∂steren metod.
     * Girilen kadar dolu daire (‚¨§), kalanlar bo≈ü daire (‚óã) ≈üeklinde g√∂sterilir.
     */
    private void updatePinDots() {
        if (pinDots == null) return;

        StringBuilder dots = new StringBuilder();
        for (int i = 0; i < enteredPin.length(); i++) {
            dots.append("‚¨§ ");
        }
        for (int i = enteredPin.length(); i < 4; i++) {
            dots.append("‚óã ");
        }
        pinDots.setText(dots.toString().trim());
        pinDots.setVisibility(View.VISIBLE);
    }

    /**
     * PIN kontrol√ºn√º yapar. Doƒüruysa giri≈ü ba≈üarƒ±lƒ±dƒ±r, deƒüilse kullanƒ±cƒ±ya uyarƒ± verir.
     */
    private void checkPin() {
        if (enteredPin.toString().equals(correctPin)) {
            Toast.makeText(this, "Giri≈ü Ba≈üarƒ±lƒ±", Toast.LENGTH_SHORT).show();
            startActivity(new Intent(this, MainActivity.class));
            finish();
        } else {
            Toast.makeText(this, "Yanlƒ±≈ü PIN", Toast.LENGTH_SHORT).show();
            Vibrator v = (Vibrator) getSystemService(VIBRATOR_SERVICE);
            if (v != null) v.vibrate(300); // Titre≈üim
            enteredPin.setLength(0);       // PIN sƒ±fƒ±rlanƒ±r
            updatePinDots();               // G√∂rsel yeniden ayarlanƒ±r
        }
    }
}
